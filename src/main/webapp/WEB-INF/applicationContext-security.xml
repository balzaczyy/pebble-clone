<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">

  <!-- ======================== FILTER CHAIN ======================= -->
  <bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
    <security:filter-chain-map path-type="ant">
      <security:filter-chain pattern="/xmlrpc/**" filters="anonymousProcessingFilter"/>
      <security:filter-chain pattern="/**/*.xml" filters="
        securityContextPersistenceFilter,
        openIdAuthenticationFilter,
        basicProcessingFilter,
        rememberMeProcessingFilter,
        basicExceptionTranslationFilter,
        privateBlogInvocationInterceptor,
        filterInvocationInterceptor
        "/>
      <security:filter-chain pattern="/**" filters="
        securityContextPersistenceFilter,
        openIdAuthenticationFilter,
        formProcessingFilter,
        rememberMeProcessingFilter,
        exceptionTranslationFilter,
        privateBlogInvocationInterceptor,
        filterInvocationInterceptor
        "/>
    </security:filter-chain-map>
  </bean>

  <!-- ======================== AUTHENTICATION ======================= -->

  <bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter"/>

  <!-- ===================== HTTP REQUEST SECURITY ==================== -->

  <bean id="anonymousProcessingFilter"
        class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
    <property name="key" value="anonymous"/>
    <property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS"/>
  </bean>

  <bean id="authenticationEntryPoint"
        class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
    <property name="loginFormUrl" value="/loginPage.action"/>
    <property name="forceHttps" value="false"/>
  </bean>

  <bean id="basicProcessingFilter"
        class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
    <property name="authenticationManager" ref="authenticationManager"/>
    <property name="authenticationEntryPoint" ref="basicAuthenticationEntryPoint"/>
  </bean>

  <bean id="basicAuthenticationEntryPoint"
        class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
    <property name="realmName" value="Secured newsfeeds"/>
  </bean>

  <bean id="basicExceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
    <property name="authenticationEntryPoint" ref="basicAuthenticationEntryPoint"/>
  </bean>

  <!-- Note the order that entries are placed against the objectDefinitionSource is critical.
  The FilterSecurityInterceptor will work from the top of the list down to the FIRST pattern that matches the request URL.
  Accordingly, you should place MOST SPECIFIC (ie a/b/c/d.*) expressions first, with LEAST SPECIFIC (ie a/.*) expressions last -->
  <bean id="filterInvocationInterceptor"
        class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
    <property name="authenticationManager" ref="authenticationManager"/>
    <property name="accessDecisionManager" ref="accessDecisionManager"/>
    <property name="securityMetadataSource">
      <security:filter-security-metadata-source lowercase-comparisons="true" path-type="ant">
        <security:intercept-url pattern="/**/*.secureaction" access="
          ROLE_BLOG_OWNER,
          ROLE_BLOG_PUBLISHER,
          ROLE_BLOG_CONTRIBUTOR,
          ROLE_BLOG_ADMIN,
          ROLE_BLOG_READER
        "/>
        <security:intercept-url pattern="/**/files/" access="ROLE_BLOG_CONTRIBUTOR"/>
        <security:intercept-url pattern="/**/images/" access="ROLE_BLOG_CONTRIBUTOR"/>
        <security:intercept-url pattern="/**/theme/**" access="ROLE_BLOG_OWNER"/>
        <security:intercept-url pattern="/**/help/**" access="
          ROLE_BLOG_OWNER,
          ROLE_BLOG_PUBLISHER,
          ROLE_BLOG_CONTRIBUTOR
        "/>
      </security:filter-security-metadata-source>
    </property>
  </bean>
</beans>